// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name OnepayIPG
import CommonCrypto
import Foundation
@_exported import OnepayIPG
import Swift
import UIKit
import _Concurrency
public protocol OnepayIPGDelegate {
  func onPaymentSuccess(response: OnepayIPG.OnepayIPGSuccess)
  func onPaymentFailed(error: OnepayIPG.OnepayIPGError)
}
public struct OnepayIPGInit {
}
public struct Customer {
  public init(firstName: Swift.String, lastName: Swift.String, phone: Swift.String, email: Swift.String)
}
public struct Configurations {
  public init(token: Swift.String, appID: Swift.String, hashKey: Swift.String)
}
public struct Product {
  public init(amount: Swift.Float, currency: OnepayIPG.CurrencyTypes, reference: Swift.String, transactionOrder: [OnepayIPG.Product.TransactionOrder]? = nil)
  public struct TransactionOrder : Swift.Encodable {
    public init(itemName: Swift.String, itemCode: Swift.String, qty: Swift.Int, unitPrice: Swift.Float)
    public func encode(to encoder: Swift.Encoder) throws
  }
}
public enum CurrencyTypes : Swift.String {
  case LKR
  case USD
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public class IPGInitBuilder {
  public init()
  public func setUser(_ user: OnepayIPG.Customer)
  public func setConfigurations(_ secDetails: OnepayIPG.Configurations)
  public func setProduct(_ productDetails: OnepayIPG.Product)
  public func build() -> OnepayIPG.OnepayIPGInit
  @objc deinit
}
public struct OnepayIPGSuccess {
  public let status: Swift.Int
  public let description: Swift.String
  public let firstName: Swift.String
  public let lastName: Swift.String
  public let phone: Swift.String
  public let reference: Swift.String
  public let email: Swift.String
  public let amount: Swift.Float
  public let currency: Swift.String
}
public struct OnepayIPGError {
  public let responseCode: Swift.Int?
  public let description: Swift.String?
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class GatewayMainVC : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public static let CONTAINS_STORYBOARD: Swift.String
  @_Concurrency.MainActor(unsafe) public static let MAIN_GATEWAY: Swift.String
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) public func setInitData(ipgInitData: OnepayIPG.OnepayIPGInit)
  @_Concurrency.MainActor(unsafe) public func setIPGDelegate(onepayIPGDelegate: OnepayIPG.OnepayIPGDelegate)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func prepare(for segue: UIKit.UIStoryboardSegue, sender: Any?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension OnepayIPG.CurrencyTypes : Swift.Equatable {}
extension OnepayIPG.CurrencyTypes : Swift.Hashable {}
extension OnepayIPG.CurrencyTypes : Swift.RawRepresentable {}
